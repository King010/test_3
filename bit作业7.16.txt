int main()//大小写交换
{
	int i=0;
	int b=0;
	char arr[10];
	for(i=0;i<10;i++)
	{
		arr[i]=getchar();
		if(64<arr[i]&&arr[i]<91)  arr[i]=arr[i]+32;
		else if(96<arr[i]&&arr[i]<123) arr[i]=arr[i]-32;
		//else if(0<arr[i]&&arr[i]<256) arr[i]=1;
	}
	for(b=0;b<10;b++)
	{
		if((64<arr[b]&&arr[b]<91)||(96<arr[b]&&arr[b]<123))
	         printf("%c",arr[b]);
		
	}
   return 0;	
}


#define EXP 0.00000000001
int main()//二元一次方程的根
{ 
	double a=0.0;
	double b=0.0;
	double c=0.0;
	double d=0.0;
	printf("请输入一元二次方程中a，b，c的值：");
	scanf("%lf %lf %lf",&a,&b,&c);
	if((a> -EXP) && (a<EXP))
	{
		printf("dsadx的值为：%lf",-c/b);
	}
	else 
	{
		double d=b*b-4*a*c;
		if((d>-EXP)&&(d<EXP))
		{
		   printf("x有两个相等的实根：%lf",-b/(2*a));
		}
		else if(d>0)
		{
			printf("x有两个不相等的实根：%lf %lf",(-b+sqrt(d))/(2*a), (-b-sqrt(d))/(2*a));
		}
	}
	return 0;
}




int swap_bits1(int x)
{
    return ((x & 0x55555555) << 1) | ((x & 0xAAAAAAAA) >> 1);
}

int main()//将整数的二进制位奇数位于偶数为交换
{
  
    int y = 0;
	int x = 0;
	int a = 0,q = 0;
	int b[32]={0};
	printf("请输入一个整数：");
	scanf("%d",&x);
	y = swap_bits1(x);
	while(y!=0)
	{
		x=y%2;
        y=y/2;
        b[a]=x;
		a++;
    }
	q=a-1;
	while(q>=0)
	{
	    printf("%d",b[q]);//
		q--;
	}
    return 0;
}